package main

// Write a function in golang that parses the following json formatted string into an objected with nested objects. At the end, the function returns the entire new object and an error code that indicates if something went wrong. Here's the example object: `{"id":1,"jsonrpc":"2.0","result":{"network":[{"online":false,"up":false,"interface":"wan"},{"online":false,"up":false,"interface":"wwan"},{"online":false,"up":false,"interface":"tethering"},{"online":false,"up":false,"interface":"wan6"},{"online":false,"up":false,"interface":"wwan6"},{"online":false,"up":false,"interface":"tethering6"},{"online":true,"up":true,"interface":"modem_1_1_2"},{"online":false,"up":false,"interface":"modem_1_1_2_6"}],"wifi":[{"guest":false,"ssid":"FourMonkeysOnTheRoad","up":true,"channel":0,"band":"2G","name":"default_radio0","passwd":"000EikeJiEun111"},{"guest":true,"ssid":"GL-XE300-efd-Guest","up":false,"channel":0,"band":"2G","name":"guest2g","passwd":"goodlife"}],"service":[{"status":1,"peer_id":4428,"name":"wgclient","group_id":7687},{"name":"wgserver","status":0},{"name":"ovpnclient","status":0},{"name":"ovpnserver","status":0}],"client":[{"cable_total":0,"wireless_total":2}],"system":{"netnat_enabled":false,"guest_ip":"192.168.9.1","flash_app":3375104,"ipv6_enabled":false,"guest_netmask":"255.255.255.0","flash_free":94781440,"load_average":[0.62,0.75,0.89],"mode":0,"tzoffset":"+0100","lan_netmask":"255.255.255.0","flash_total":134217728,"memory_total":124096512,"memory_free":48201728,"ddns_enabled":false,"uptime":20890.01,"lan_ip":"192.168.8.1","timestamp":1741510126,"mcu":{"charge_cnt":4,"temperature":38.1,"charge_percent":100,"charging_status":1},"memory_buff_cache":32677888}}}`. AI!
